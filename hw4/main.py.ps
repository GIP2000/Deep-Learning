%!PS-Adobe-3.0
%%Title: main.py
%%For: Gregory Presser
%%Creator: a2ps version 4.14
%%CreationDate: Thu Oct  6 18:22:18 2022
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(import) K
( numpy as np) p n
(import) K
( matplotlib.pyplot as plt) p n
(import) K
( tensorflow as tf) p n
(from) K
( tensorflow.keras.models ) p
(import) K
( Sequential) p n
(from) K
( tensorflow.keras.layers ) p
(import) K
( Conv2D, MaxPooling2D, Dense,\\) p n
(    Flatten, Dropout, ReLU, BatchNormalization, Input, ZeroPadding2D, AveragePoo) N
(ling2D) N
(import) K
( tensorflow_addons as tfa) p n
() N
(FILE_NAME = ") S
(data_batch_) str
(") p n
(FILE_COUNT = 5) N
(TEST_FILE = ") S
(test_batch) str
(") p n
(META_FILE = ") S
(batches.meta) str
(") p n
(RNG_SEED = 31415926) N
(LEARNING_RATE = .001) N
(BATCH_SIZE = 128) N
(DEFAULT_EPOCHS = 30) N
() N
() N
(def) K
( get_meta\(file: str\):) p n
(    ) S
(return) K
( unpickle\(file\)[b') p
(label_names) str
(']) p n
() N
() N
(def) K
( load_batch\(file: str, label_key: str = b') p
(labels) str
('\):) p n
(    dict = unpickle\(file\)) N
(    ) S
(return) K
( dict[b') p
(data) str
('].reshape\(len\(dict[label_key]\), 3, 32, 32\).transpose\(0, 2,) p n
( 3, 1\),\\) N
(        np.array\(tf.keras.utils.to_categorical\(dict[label_key]\)\)) N
() N
() N
(def) K
( unpickle\(file: str\):) p n
(    ) S
(import) K
( pickle) p n
(    with open\(file, ') S
(rb) str
('\) as fo:) p n
(        dict = pickle.load\(fo, encoding=') S
(bytes) str
('\)) p n
(    ) S
(return) K
( dict) p n
() N
() N
(def) K
( load_data\(file_base: str, batches: int\):) p n
(    x = []) N
(    y = []) N
(    ) S
(# well I can't vectorize IO operations so here is a gross for loop) c n
(    ) p
(for) K
( i ) p
(in) K
( range\(batches\):) p n
(        x_t, y_t = load_batch\(file_base + str\(i+1\)\)) N
(        x.append\(x_t\)) N
(        y.append\(y_t\)) N
(    ) S
(return) K
( np.concatenate\(x[0:-1]\), np.concatenate\(y[0:-1]\), x[-1], y[-1]) p n
() N
() N
(def) K
( plotImg\(img: np.ndarray, label: str\):) p n
(    plt.imshow\(img\)) N
(    plt.title\(label\)) N
(    plt.show\(\)) N
() N
() N
(def) K
( res50\(\):) p n
(    input = Input\(shape=\(32, 32, 3\)\)) N
(    x = ZeroPadding2D\(padding=\(3, 3\)\)\(input\)) N
(    x = Conv2D\(64, kernel_size=\(7, 7\), strides=\(2, 2\)\)\(x\)) N
(    x = BatchNormalization\(\)\(x\)) N
(    x = ReLU\(\)\(x\)) N
(    x = MaxPooling2D\(\(3, 3\), strides=\(2, 2\)\)\(x\)) N
(    ) S
(#2nd stage ) c n
(main.py) (Page 1/5) (Oct 06, 22 18:18) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(# frm here on only conv block and identity block, no pooling) c n
() p n
(    x = skip_conv\(x, s=1, filters=\(64, 256\)\)) N
(    x = skip_identity\(x, filters=\(64, 256\)\)) N
(    x = skip_identity\(x, filters=\(64, 256\)\)) N
() N
(    ) S
(# 3rd stage) c n
() p n
(    x = skip_conv\(x, s=2, filters=\(128, 512\)\)) N
(    x = skip_identity\(x, filters=\(128, 512\)\)) N
(    x = skip_identity\(x, filters=\(128, 512\)\)) N
(    x = skip_identity\(x, filters=\(128, 512\)\)) N
() N
(    ) S
(# 4th stage) c n
() p n
(    x = skip_conv\(x, s=2, filters=\(256, 1024\)\)) N
(    x = skip_identity\(x, filters=\(256, 1024\)\)) N
(    x = skip_identity\(x, filters=\(256, 1024\)\)) N
(    x = skip_identity\(x, filters=\(256, 1024\)\)) N
(    x = skip_identity\(x, filters=\(256, 1024\)\)) N
(    x = skip_identity\(x, filters=\(256, 1024\)\)) N
() N
(    ) S
(# 5th stage) c n
() p n
(    x = skip_conv\(x, s=2, filters=\(512, 2048\)\)) N
(    x = skip_identity\(x, filters=\(512, 2048\)\)) N
(    x = skip_identity\(x, filters=\(512, 2048\)\)) N
() N
(    ) S
(# ends with average pooling and dense connection) c n
() p n
(    x = AveragePooling2D\(\(2, 2\), padding=') S
(same) str
('\)\(x\)) p n
() N
(    x = Flatten\(\)\(x\)) N
(    x = Dense\(100, activation=') S
(softmax) str
(', kernel_initializer=') p
(he_normal) str
('\)\(x\)) p n
() N
(    ) S
(return) K
( tf.keras.models.Model\(inputs = input, outputs=x\)) p n
() N
() N
() N
(def) K
( skip_conv\(x, s, filters\):) p n
(    x_skip = x) N
(    f1, f2 = filters) N
(    l2 = tf.keras.regularizers.L2) N
() N
(    ) S
(# first block) c n
(    x = Conv2D\(f1, kernel_size=\(1, 1\), strides=\(s, s\), padding=') p
(valid) str
(', kernel_re) p n
(gularizer=l2\(0.001\)\)\(x\)) N
(    ) S
(# when s = 2 then it is like downsizing the feature map) c n
(    x = BatchNormalization\(\)\(x\)) p n
(    x = ReLU\(\)\(x\)) N
() N
(    ) S
(# second block) c n
(    x = Conv2D\(f1, kernel_size=\(3, 3\), strides=\(1, 1\), padding=') p
(same) str
(', kernel_re) p n
(gularizer=l2\(0.001\)\)\(x\)) N
(    x = BatchNormalization\(\)\(x\)) N
(    x = ReLU\(\)\(x\)) N
() N
(    ) S
(# third block) c n
(    x = Conv2D\(f2, kernel_size=\(1, 1\), strides=\(1, 1\), padding=') p
(valid) str
(', kernel_re) p n
(gularizer=l2\(0.001\)\)\(x\)) N
(    x = BatchNormalization\(\)\(x\)) N
() N
(main.py) (Page 2/5) (Oct 06, 22 18:18) title
border
grestore
(Printed by Gregory Presser) rhead
(main.py) (1/3) (Thursday October 06, 2022) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ) p
(# shortcut) c n
(    x_skip = Conv2D\(f2, kernel_size=\(1, 1\), strides=\(s, s\), padding=') p
(valid) str
(', kern) p n
(el_regularizer=l2\(0.001\)\)\(x_skip\)) N
(    x_skip = BatchNormalization\(\)\(x_skip\)) N
() N
(    ) S
(# add) c n
(    x = x + x_skip) p n
(    x = ReLU\(\)\(x\)) N
() N
(    ) S
(return) K
( x) p n
() N
(def) K
( skip_identity\(x, filters\):) p n
(    x_skip = x) N
(    f1, f2 = filters) N
(    l2 = tf.keras.regularizers.L2) N
() N
(    ) S
(# First Block) c n
(    x = Conv2D\(f1, kernel_size=\(1, 1\), strides=\(1, 1\), padding=') p
(valid) str
(', kernel_re) p n
(gularizer=l2\(0.001\)\)\(x\)) N
(    x = BatchNormalization\(\)\(x\)) N
(    x = ReLU\(\)\(x\)) N
() N
(    ) S
(# Second Block) c n
(    x = Conv2D\(f1, kernel_size=\(3, 3\), strides=\(1, 1\), padding=') p
(same) str
(', kernel_re) p n
(gularizer=l2\(0.001\)\)\(x\)) N
(    x = BatchNormalization\(\)\(x\)) N
(    x = ReLU\(\)\(x\)) N
() N
(    ) S
(# third block activation used after adding the input) c n
(    x = Conv2D\(f2, kernel_size=\(1, 1\), strides=\(1, 1\), padding=') p
(valid) str
(', kernel_re) p n
(gularizer=l2\(0.001\)\)\(x\)) N
(    x = BatchNormalization\(\)\(x\)) N
() N
(    ) S
(# add the input) c n
(    x = x + x_skip) p n
(    x = ReLU\(\)\(x\)) N
() N
(    ) S
(return) K
( x) p n
() N
() N
(def) K
( cifar100\(EPOCHS: int = DEFAULT_EPOCHS\):) p n
(    seed_sequence = np.random.SeedSequence\(RNG_SEED\)) N
(    [np_seed] = seed_sequence.spawn\(1\)) N
(    np_rng = np.random.default_rng\(np_seed\)) N
(    x, y = load_batch\(") S
(cifar-100-python/train) str
(", b') p
(fine_labels) str
('\)) p n
(    indexes = np_rng.permutation\(len\(y\)\)) N
(    x_r = x[indexes]) N
(    y_r = y[indexes]) N
(    split = int\(.8*len\(y\)\)) N
(    x_train = x_r[0:split]) N
(    y_train = y_r[0:split]) N
(    x_val = x_r[split::]) N
(    y_val = y_r[split::]) N
() N
(    model = Sequential\([) N
(        Conv2D\(32, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
(', input_shape=\(32, 32, 3\)\),) p n
(        BatchNormalization\(\),) N
(        Conv2D\(32, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        MaxPooling2D\(\(2, 2\)\),) N
(main.py) (Page 3/5) (Oct 06, 22 18:18) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        Dropout\(.2\),) p n
(        Conv2D\(64, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        Conv2D\(64, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        MaxPooling2D\(\(2, 2\)\),) N
(        Dropout\(.3\),) N
(        Conv2D\(128, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', pad) p n
(ding=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        Conv2D\(128, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', pad) p n
(ding=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        MaxPooling2D\(\(2, 2\)\),) N
(        Dropout\(.4\),) N
(        Flatten\(\),) N
(        Dense\(100, activation=") S
(softmax) str
("\)) p n
(    ]\)) N
() N
(    model.summary\(\)) N
(    model.compile\(optimizer=') S
(adam) str
(',) p n
(                  loss=') S
(categorical_crossentropy) str
(',) p n
(                  metrics=[') S
(accuracy) str
(', tf.metrics.TopKCategoricalAccuracy\(5\)]\)) p n
(    _ = model.fit\(x_train, y_train, epochs=EPOCHS,) N
(                  batch_size=BATCH_SIZE, validation_data=\(x_val, y_val\)\)) N
() N
(    x_test, y_test = load_batch\(") S
(cifar-100-python/test) str
(", b') p
(fine_labels) str
('\)) p n
(    _, acc, top5 = model.evaluate\(x_test, y_test\)) N
(    ) S
(print) K
(\(") p
(acc: ) str
(" + str\(acc\)\)) p n
(    ) S
(print) K
(\(") p
(top5: ) str
(" + str\(top5\)\)) p n
() N
() N
(def) K
( cifar10\(EPOCHS: int = DEFAULT_EPOCHS\):) p n
(    FOLDER_NAME = ") S
(data/) str
(") p n
(    ) S
(# names = get_meta\(FOLDER_NAME + META_FILE\)) c n
(    x_train, y_train, x_val, y_val = load_data\() p n
(        FOLDER_NAME + FILE_NAME, FILE_COUNT\)) N
() N
(    ) S
(# model = model_builder\(\(32, 32, 3\), 10\)) c n
(    model = Sequential\([) p n
(        Conv2D\(32, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
(', input_shape=\(32, 32, 3\)\),) p n
(        BatchNormalization\(\),) N
(        Conv2D\(32, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        MaxPooling2D\(\(2, 2\)\),) N
(        Dropout\(.2\),) N
(        Conv2D\(64, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        Conv2D\(64, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', padd) p n
(ing=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        MaxPooling2D\(\(2, 2\)\),) N
(        Dropout\(.3\),) N
(        Conv2D\(128, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', pad) p n
(ding=') S
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        Conv2D\(128, \(3, 3\), activation=') S
(relu) str
(', kernel_initializer=') p
(he_uniform) str
(', pad) p n
(main.py) (Page 4/5) (Oct 06, 22 18:18) title
border
grestore
(Printed by Gregory Presser) rhead
(main.py) (2/3) (Thursday October 06, 2022) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(ding=') p
(same) str
('\),) p n
(        BatchNormalization\(\),) N
(        MaxPooling2D\(\(2, 2\)\),) N
(        Dropout\(.4\),) N
(        Flatten\(\),) N
(        Dense\(10, activation=") S
(softmax) str
("\)) p n
(        ]\)) N
(    ) S
(# optimizer = tfa.optimizers.AdamW\() c n
(    ) p
(#     weight_decay=1e-6, learning_rate=LEARNING_RATE\)) c n
(    ) p
(# optimizer = tf.keras.optimizers.SGD\(learning_rate=.1\)) c n
(    model.summary\(\)) p n
(    model.compile\(optimizer=') S
(adam) str
(',) p n
(                  loss=') S
(categorical_crossentropy) str
(', metrics=[') p
(accuracy) str
(']\)) p n
(    history = model.fit\(x_train, y_train, epochs=EPOCHS,) N
(                        batch_size=BATCH_SIZE, validation_data=\(x_val, y_val\)\)) N
() N
(    x_test, y_test = load_batch\(FOLDER_NAME + TEST_FILE\)) N
(    _, acc = model.evaluate\(x_test, y_test\)) N
(    ) S
(print) K
(\(") p
(acc: ) str
(" + str\(acc\)\)) p n
() N
() N
(def) K
( main\(\):) p n
(    cifar100\(50\)) N
() N
() N
(if) K
( __name__ == ") p
(__main__) str
(":) p n
(    main\(\)) N
() N
() N
(""") N
(For Cifar10 I end up getting an accuracy of ~84% with this model which is near the state of the art in the 90% range, ) str n
(For Cifar100 I could not get the model to do any better than than a top 5 accuracy in the 80% Range I tried the ResNet ) N
(model \(in an unused function above\),) N
(but it did not yield better results than a standard conv model. Likely Data Augmentation would be helpful ) N
(""") p n
(main.py) (Page 5/5) (Oct 06, 22 18:18) title
border
grestore
(Printed by Gregory Presser) rhead
(main.py) (3/3) (Thursday October 06, 2022) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
